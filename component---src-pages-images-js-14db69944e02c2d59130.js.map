{"version":3,"sources":["webpack://portfolio/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://portfolio/./src/components/sidebar.js","webpack://portfolio/./src/pages/images.js"],"names":["_assertThisInitialized","self","ReferenceError","Component","ColorPage","props","state","content","ColorImages","title","slidesToShow","expand","switchCarousel","bind","expandSideBar","clickContent","clickTitle","slides","this","setState","console","log","forceUpdate","fetchState","prevState","render","arrow","numberlist","IndexImages","ArchiveImages","IphoneImages","className","onClick","map","item","style","color","images","GoodwinImages"],"mappings":"2GAAe,SAASA,EAAuBC,GAC7C,QAAa,IAATA,EACF,MAAM,IAAIC,eAAe,6DAG3B,OAAOD,E,qGCF4BE,a,mKCMhBC,E,YACnB,WAAYC,GAAO,IAAD,SAChB,cAAMA,IAAN,MACKC,MAAQ,CAACC,QAASC,KAAaC,MAAO,QAASC,aAAc,EAAGC,QAAO,GAC5E,EAAKC,eAAiB,EAAKA,eAAeC,MAApB,WACtB,EAAKC,cAAgB,EAAKA,cAAcD,MAAnB,WAJL,G,uCAOlBD,eAAA,SAAeG,EAAcC,EAAYC,GACvCC,KAAKC,SAAS,CAACZ,QAASQ,EAAcN,MAAOO,EAAYN,aAAaO,IACtEG,QAAQC,IAAIH,KAAKZ,MAAMC,SACvBW,KAAKI,e,EAGPC,WAAA,WACE,MAAwB,YAApBL,KAAKZ,MAAMG,MACN,kBAEe,UAApBS,KAAKZ,MAAMG,MACN,gBAEF,U,EAGTK,cAAA,WACEI,KAAKC,UAAS,SAAAK,GAAS,MAAK,CAC1Bb,QAASa,EAAUb,Y,EAIvBc,OAAA,WAAS,IA0BHC,EA1BE,OACAC,EAAa,CACjB,CACElB,MAAO,QACPF,QAASC,KACTE,aAAc,GAEhB,CACED,MAAO,gBACPF,QAASqB,KACTlB,aAAc,GAEhB,CACED,MAAO,WACPF,QAASsB,KACTnB,aAAc,GAEhB,CACED,MAAO,SACPF,QAASuB,KACTpB,aAAc,IAGXH,EAAWW,KAAKZ,MAAhBC,QACDG,EAAcQ,KAAKZ,MAAMI,aACzBC,EAASO,KAAKZ,MAAMK,OAO1B,OAJEe,EADU,GAARf,EACM,gBAAC,MAAD,CAAeoB,UAAY,iBAE3B,gBAAC,MAAD,CAAgBA,UAAY,iBAGpC,4BACE,uBAAKA,UAAmB,GAARpB,EAAgB,iBAAkB,mBAAoBqB,QAAWd,KAAKJ,eACnFY,GAEH,uBAAKK,UAAY,WACf,uBAAKA,UAAoB,GAARpB,EAAe,oBAAqB,QACnD,uBAAKoB,UAAmB,GAARpB,EAAgB,UAAW,eACxCgB,EAAWM,KAAI,SAACC,GACf,OACE,uBAAKH,UAAqB,GAARpB,EAAe,mBAAmB,IAClD,qBAAIqB,QAAS,kBAAI,EAAKpB,eAAesB,EAAK3B,QAAS2B,EAAKzB,MAAOyB,EAAKxB,eAAeyB,MAAQ,CAACC,MAAOF,EAAKzB,OAAO,EAAKH,MAAMG,MAAQ,MAAQ,UAAYyB,EAAKzB,aAMrK,uBAAKsB,UAAU,aACb,8BACE,gBAAC,IAAD,OAEF,uBAAKA,UAAY,YACf,uBAAKA,UAAWb,KAAKK,cACnB,gBAAC,IAAD,CAAUc,OAAQ9B,EAASU,OAAUP,KAEtB,YAAlBQ,KAAKZ,MAAMG,OACV,2BACE,qBAAGsB,UAAY,uBAAf,IAAsC,+GAAtC,IAAgI,2BAAhI,qCAAuK,uCAAvK,sDACA,uBAAKA,UAAY,mBACf,gBAAC,IAAD,CAAUM,OAAUC,KAAerB,OAAUP,W,GA3FxBP","file":"component---src-pages-images-js-14db69944e02c2d59130.js","sourcesContent":["export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import React, { Component } from \"react\";\nimport \"../styles/global.css\";\n\nexport default class SideBar extends Component {\n  constructor(props){\n    super(props);\n    this.state = {content:\"\"}\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  handleClick(){\n    this.setState({content: this.props.content})\n  }\n\n  render(){\n    const {items} = this.props;\n    return(\n      <div className = \"sideBar\">\n        {items.map((item)=>{\n          return (\n            <div>\n              <a onClick = {this.handleClick}>{item.title}</a>\n            </div>\n          )\n        })}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Carousel from \"../components/carousel.js\"\nimport NavBar from \"../components/navbar.js\"\nimport SideBar from \"../components/sidebar.js\"\nimport {ColorImages,IndexImages, ArchiveImages, GoodwinImages, IphoneImages} from \"../images/index.js\"\nimport { BsChevronLeft, BsChevronRight } from \"react-icons/bs\";\n\nimport \"../styles/global.css\";\n\nexport default class ColorPage extends Component {\n  constructor(props){\n    super(props);\n    this.state = {content: ColorImages, title: \"color\", slidesToShow: 1, expand:false}\n    this.switchCarousel = this.switchCarousel.bind(this)\n    this.expandSideBar = this.expandSideBar.bind(this)\n  }\n\n  switchCarousel(clickContent, clickTitle, slides){\n    this.setState({content: clickContent, title: clickTitle, slidesToShow:slides});\n    console.log(this.state.content);\n    this.forceUpdate();\n  }\n\n  fetchState(){\n    if (this.state.title == \"archival\"){\n      return \"archival-images\";\n    }\n    if (this.state.title == \"iphone\"){\n      return \"iphone-images\";\n    }\n    return \"images\";\n  }\n\n  expandSideBar(){\n    this.setState(prevState => ({\n      expand: !prevState.expand\n    }));\n  }\n\n  render(){\n    const numberlist = [\n      {\n        title: \"color\",\n        content: ColorImages,\n        slidesToShow: 1,\n      },\n      {\n        title: \"black & white\",\n        content: IndexImages,\n        slidesToShow: 1,\n      },\n      {\n        title: \"archival\",\n        content: ArchiveImages,\n        slidesToShow: 1,\n      },\n      {\n        title: \"iphone\",\n        content: IphoneImages,\n        slidesToShow: 1,\n      }\n    ];\n    const {content} = this.state;\n    const slidesToShow =this.state.slidesToShow;\n    const expand = this.state.expand;\n    let arrow;\n    if (expand==true) {\n      arrow = <BsChevronLeft className = \"expand-arrow\"/>;\n    } else {\n      arrow = <BsChevronRight className = \"expand-arrow\"/>;\n    }\n    return(\n      <main>\n        <div className={expand==false ? \"expand-sideBar\": \"collapse-sideBar\"} onClick = {this.expandSideBar}>\n          {arrow}\n        </div>\n        <div className = \"cssgrid\">\n          <div className ={expand==true ? \"expand-sideBar-bg\": \"none\"}>\n            <div className={expand==false ? \"sideBar\": \"expand-text\"}>\n              {numberlist.map((item)=>{\n                return (\n                  <div className = {expand==true ? \"expand-list-item\":\"\"}>\n                    <a  onClick={()=>this.switchCarousel(item.content, item.title, item.slidesToShow)} style ={{color: item.title==this.state.title ? 'red' : 'black'}} >{item.title}</a>\n                  </div>\n                )\n              })}\n            </div>\n          </div>\n          <div className=\"text-body\">\n            <header>\n              <NavBar/>\n            </header>\n            <div className = \"carousel\">\n              <div className={this.fetchState()}>\n                <Carousel images={content} slides = {slidesToShow}/>\n              </div>\n            {this.state.title==\"archival\" &&\n              <div>\n                <p className = \"archive-image-label\"> <i>All specimens were digitized in collaboration with the Brown University Herbarium.</i> <br/> Shown below are samples from the <i>exsiccatae</i> (or bound collection) of Hannah Wilkinson Goodwin</p>\n                <div className = \"archival-images\">\n                  <Carousel images = {GoodwinImages} slides = {slidesToShow}/>\n                </div>\n              </div>\n            }\n            </div>\n          </div>\n\n        </div>\n      </main>\n    );\n  }\n}\n"],"sourceRoot":""}